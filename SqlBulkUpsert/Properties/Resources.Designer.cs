//------------------------------------------------------------------------------
// <auto-generated>
//	 This code was generated by a tool.
//	 Runtime Version:4.0.30319.225
//
//	 Changes to this file may cause incorrect behavior and will be lost if
//	 the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SqlBulkUpsert.Properties {
	using System;
	
	
	/// <summary>
	///   A strongly-typed resource class, for looking up localized strings, etc.
	/// </summary>
	// This class was auto-generated by the StronglyTypedResourceBuilder
	// class via a tool like ResGen or Visual Studio.
	// To add or remove a member, edit your .ResX file then rerun ResGen
	// with the /str option, or rebuild your VS project.
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
	[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
	[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
	internal class Resources {
		
		private static global::System.Resources.ResourceManager resourceMan;
		
		private static global::System.Globalization.CultureInfo resourceCulture;
		
		[global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
		internal Resources() {
		}
		
		/// <summary>
		///   Returns the cached ResourceManager instance used by this class.
		/// </summary>
		[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
		internal static global::System.Resources.ResourceManager ResourceManager {
			get {
				if (object.ReferenceEquals(resourceMan, null)) {
					global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SqlBulkUpsert.Properties.Resources", typeof(Resources).Assembly);
					resourceMan = temp;
				}
				return resourceMan;
			}
		}
		
		/// <summary>
		///   Overrides the current thread's CurrentUICulture property for all
		///   resource lookups using this strongly typed resource class.
		/// </summary>
		[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
		internal static global::System.Globalization.CultureInfo Culture {
			get {
				return resourceCulture;
			}
			set {
				resourceCulture = value;
			}
		}
		
		/// <summary>
		///   Looks up a localized string similar to 
		///--DECLARE @tableName varchar(255) = &apos;TestUpsert&apos;
		///
		///-- Check table exists
		///SELECT * FROM INFORMATION_SCHEMA.TABLES
		///WHERE TABLE_NAME = @tableName
		///
		///-- Get column schema information for table (need this to create our temp table)
		///SELECT * FROM INFORMATION_SCHEMA.COLUMNS
		///WHERE TABLE_NAME = @tableName
		///
		///-- Identifies the columns making up the primary key (do we use this for our match?)
		///SELECT kcu.COLUMN_NAME 
		///FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE kcu
		///	INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS  [rest of string was truncated]&quot;;.
		/// </summary>
		internal static string GetTableInfo {
			get {
				return ResourceManager.GetString("GetTableInfo", resourceCulture);
			}
		}
		
		/// <summary>
		///   Looks up a localized string similar to 
		///IF (@@microsoftversion / 0x01000000) &gt; 9 
		///  BEGIN
		///	exec (&apos;
		///	MERGE INTO [{0}] AS target
		///	USING [{1}] AS source
		///	ON {2}
		///	WHEN MATCHED THEN
		///		UPDATE SET {3}
		///	WHEN NOT MATCHED BY TARGET THEN
		///		INSERT ({4}) 
		///		VALUES ({4})
		///	OUTPUT $action [action], INSERTED.$IDENTITY [ident], [source].[_Surrogate];&apos;)
		///  END
		///ELSE
		///  BEGIN
		///	exec(&apos;
		///	BEGIN TRAN
		///		INSERT INTO [{0}] ({4})
		///		OUTPUT $action [action], INSERTED.$IDENTITY [ident], [source].[_Surroga [rest of string was truncated]&quot;;.
		/// </summary>
		internal static string MergeStatement {
			get {
				return ResourceManager.GetString("MergeStatement", resourceCulture);
			}
		}
	}
}
